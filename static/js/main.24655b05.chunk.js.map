{"version":3,"sources":["CalculateTime.js","glass-clink-1.mp3","bell-ring.mp3","App.js","index.js"],"names":["calculateTime","seconds","hours","Math","floor","minutes","Timer","useState","setSeconds","timeArray","setTimeArray","clockActive","setClockActive","sessionTime","setSessionTime","breakTime","setBreakTime","sessionOn","setSessionOn","breakIsOn","setBreakOn","useSound","bell","volume","playBell","glassClink","playClink","useEffect","interval","setInterval","clearInterval","className","onClick","ceil","toFixed","style","marginTop","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAgBiBA,MAhBjB,SAAwBC,GACpB,IAAIC,EAAQC,KAAKC,MAAMH,EAAU,MAC7BI,EAAUF,KAAKC,OAAOH,EAAmB,KAARC,GAAkB,IAOvD,OANAD,EAAUA,EAAmB,KAARC,EAA2B,GAAVG,EAMhC,CAJYH,EAAQ,GAAR,WAAiBA,GAASA,EACxBG,EAAU,GAAV,WAAmBA,GAAWA,EAC9BJ,EAAU,GAAV,WAAmBA,GAAYA,I,OCPxC,MAA0B,0CCA1B,MAA0B,sCCmK1BK,EA1JD,WAAO,IAAD,EACYC,mBAAS,MADrB,mBACXN,EADW,KACFO,EADE,OAEgBD,mBAAS,IAFzB,mBAEXE,EAFW,KAEAC,EAFA,OAGoBH,oBAAS,GAH7B,mBAGXI,EAHW,KAGEC,EAHF,OAIoBL,mBAAS,MAJ7B,mBAIXM,EAJW,KAIEC,EAJF,OAKgBP,mBAAS,KALzB,mBAKXQ,EALW,KAKAC,EALA,OAMgBT,oBAAS,GANzB,mBAMXU,EANW,KAMAC,EANA,OAOcX,oBAAS,GAPvB,mBAOXY,EAPW,KAOAC,EAPA,OAQCC,YAASC,EAAM,CAAEC,OAAQ,KAArCC,EARW,sBASEH,YAASI,EAAY,CAAEF,OAAQ,KAA5CG,EATW,oBA6FhB,OAtDFC,qBAAU,WACR,IAAIlB,EAAYT,EAAcC,GAC9BS,EAAaD,KACV,CAACR,IAGJ0B,qBAAU,WACR,IAAIC,EAAW,KAqBf,OApBKjB,EACHiB,EAAWC,aAAY,WACrBrB,GAAW,SAAAP,GAAO,OAAIA,EAAU,KAE5BgB,GAAuB,IAAVhB,GACfO,EAAWO,GACXG,GAAa,GACbE,GAAW,GACXM,KACSP,GAAuB,IAAVlB,IACtBO,EAAWK,GACXO,GAAW,GACXF,GAAa,GACbM,OAGD,KACOb,GAA2B,IAAZV,GACzB6B,cAAcF,GAET,kBAAME,cAAcF,MAC1B,CAACjB,EAAaV,EAASc,EAAWF,EAAaI,EAAWE,EAAWK,EAAUE,IA0BhF,qBAAKK,UAAU,MAAf,SACA,sBAAKA,UAAU,UAAf,UACA,4CAEI,sBAAKA,UAAU,UAAf,UACI,wBAAQA,UAAU,gBAAgBC,QAjF5C,WACKnB,EAAc,IAAMA,GAAe,MAASA,EAAc,KAC7DC,GAAe,SAAAb,GAAO,OAAIE,KAAKC,MAAOH,EAAU,GAAOA,EAAU,OAC5DkB,GACFX,EAAWK,EAAc,MA6EpB,iBACI,qBAAKkB,UAAS,uBAAkBd,IAAcE,EAAY,SAAS,YAAnE,uBACJ,wBAAQY,UAAU,gBAAgBC,QA1F9C,WACOnB,EAAc,OACjBC,GAAe,SAAAb,GAAO,OAAIE,KAAK8B,KAAMhC,EAAU,GAAOA,EAAU,OAC5DkB,GACFX,EAAWK,EAAc,MAsFnB,iBAEA,8BAEIV,KAAKC,OAAQS,EAAc,IAAIqB,QAAQ,SAM/C,0BAASH,UAAS,eACfpB,EAEDQ,EAAY,iBAEZF,EAAY,SAAS,GAJN,WADC,KAAlB,UAOM,kCAAKR,EAAU,GAAf,OACA,qCACA,4BAAIA,EAAU,QAIpB,sBAAKsB,UAAU,QAAQI,MAAO,CAACC,UAAW,QAA1C,UACM,oCACIjC,KAAKC,OAAQW,EAAY,IAAImB,QAAQ,IADzC,OAIA,wBAAQH,UAAU,gBAAgBC,QAjG9C,WACOjB,EAAY,KACfC,GAAa,SAAAf,GAAO,OAAIE,KAAKC,MAAOH,EAAU,GAAOA,EAAU,OAC5DkB,GACDX,EAAWO,EAAY,MA6FjB,iBACI,qBAAKgB,UAAS,qBAAgBZ,IAAcF,EAAY,SAAS,YAAjE,qBACJ,wBAAQc,UAAU,gBAAgBC,QA1G9C,WACOjB,EAAY,OACfC,GAAa,SAAAf,GAAO,OAAIE,KAAK8B,KAAMhC,EAAU,GAAOA,EAAU,OAC3DkB,GACDX,EAAWO,EAAY,MAsGjB,oBAIN,sBAAKgB,UAAU,MAAf,UACM,wBAAQA,UAAS,+CAA0CpB,EAAc,SAAW,YAChFqB,QAAS,WAxDvBpB,GAAgBD,GAIAQ,EAGOF,IACrBC,GAAa,GACbE,GAAW,KAJXA,GAAW,GACXF,GAAa,KAiDL,SAMKP,EAAc,QAAU,UAG7B,wBAAQoB,UAAU,eAAeC,QA1E7C,WACEZ,GAAW,GACXF,GAAa,GACbN,GAAe,GACfJ,EAAW,MACXM,EAAe,MACfE,EAAa,MAoEH,4BCtJhBqB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.24655b05.chunk.js","sourcesContent":["function calculateTime (seconds) {\r\n    let hours = Math.floor(seconds / 3600);\r\n    let minutes = Math.floor((seconds - (hours * 3600 )) / 60 );\r\n    seconds = seconds - (hours * 3600) - (minutes * 60 );\r\n\r\n    let hoursFormat = hours < 10 ? `0${hours}`: hours;\r\n    let minutesFormat = minutes < 10 ? `0${minutes}`: minutes;\r\n    let secondsFormat = seconds < 10 ? `0${seconds}` : seconds;\r\n\r\n    return[\r\n      hoursFormat, \r\n      minutesFormat,\r\n      secondsFormat\r\n    ]\r\n  }\r\n\r\n  export default calculateTime;","export default __webpack_public_path__ + \"static/media/glass-clink-1.9caa9177.mp3\";","export default __webpack_public_path__ + \"static/media/bell-ring.57d5e004.mp3\";","// src=\"https://www.soundjay.com/misc/sounds/bell-ringing-05.mp3\"\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport calculateTime from './CalculateTime';\nimport useSound from 'use-sound';\nimport glassClink from './glass-clink-1.mp3';\nimport bell from './bell-ring.mp3';\n\n\nconst Timer = () => {\n  const [seconds, setSeconds] = useState(25*60);\n  const [timeArray, setTimeArray] = useState([]);\n  const [clockActive, setClockActive] = useState(false);\n  const [sessionTime, setSessionTime] = useState(25*60);\n  const [breakTime, setBreakTime] = useState(5*60);\n  const [sessionOn, setSessionOn] = useState(false);\n  const [breakIsOn, setBreakOn] = useState(false);\n  const [playBell] = useSound(bell, { volume: 0.2 });\n  const [playClink] = useSound(glassClink, { volume: 0.1 });\n\n  function plusSessionMinutes () {\n    if ( sessionTime < 59*60) {\n      setSessionTime(seconds => Math.ceil((seconds + 60) - (seconds % 60)));\n      if(!breakIsOn) {\n        setSeconds(sessionTime + 60); \n       }}}\n    \n    function minusSessionMinutes () {\n    if ( sessionTime > 60 && sessionTime <= 60*60 && sessionTime > 60   ) {\n      setSessionTime(seconds => Math.floor((seconds - 60) - (seconds % 60)));\n       if(!breakIsOn) {\n         setSeconds(sessionTime - 60); \n        }}}\n    \n    function plusBreakMinutes () {\n      if ( breakTime < 59*60) {\n        setBreakTime(seconds => Math.ceil((seconds + 60) - (seconds % 60)));\n        if(breakIsOn) {\n          setSeconds(breakTime + 60);\n        }}}\n  \n    function minusBreakMinutes () {\n      if ( breakTime > 60) {\n        setBreakTime(seconds => Math.floor((seconds - 60) - (seconds % 60)));   \n        if(breakIsOn) {\n          setSeconds(breakTime - 60);\n        }}}  \n \n  useEffect(() => {\n    let timeArray = calculateTime(seconds);\n    setTimeArray(timeArray);\n    }, [seconds]);\n\n    \n    useEffect(() => {\n      let interval = null;\n      if ( clockActive ) {\n        interval = setInterval(() => {\n          setSeconds(seconds => seconds - 1);\n\n          if (sessionOn && seconds===0) {\n            setSeconds(breakTime);\n            setSessionOn(false);\n            setBreakOn(true);\n            playClink()\n          } else if (breakIsOn && seconds===0) {\n            setSeconds(sessionTime);\n            setBreakOn(false);\n            setSessionOn(true);\n            playBell()\n          };\n\n        }, 1000);\n      } else if (!clockActive && seconds !== 0) {\n        clearInterval(interval);\n      }\n      return () => clearInterval(interval);\n    }, [clockActive, seconds, breakTime, sessionTime, sessionOn, breakIsOn, playBell, playClink]);\n    \n    \n    function resetTime() {\n      setBreakOn(false);\n      setSessionOn(false);\n      setClockActive(false);\n      setSeconds(25*60);\n      setSessionTime(25*60);\n      setBreakTime(5*60); \n    };\n    \n    function toggleActiveInactive() {\n      setClockActive(!clockActive);\n    }; \n  \n    function setSessionOrBreak() {\n      if ('START' && !breakIsOn) {\n        setBreakOn(false)\n        setSessionOn(true);\n      } else if ('START' && !sessionOn) {\n        setSessionOn(false)\n        setBreakOn(true);\n    }};\n    \n    return (\n      <div className=\"app\">   \n      <div className='wrapper'>   \n      <h2> pomodoro </h2>        \n          \n          <div className='session'> \n              <button className='changeMinutes' onClick={minusSessionMinutes}> - </button>\n                  <div className={`session-sign-${sessionOn && !breakIsOn ? 'active':'inactive'}`}> session </div>\n              <button className='changeMinutes' onClick={plusSessionMinutes}> + </button>  \n      \n              <div> \n                {                              \n                  Math.floor ((sessionTime / 60).toFixed(0))\n                } \n                </div>\n          </div>  \n\n          \n          <section className={(`time-${  \n            !clockActive ? 'inactive' : ''\n            ||\n            breakIsOn ? 'active-breakon':''        \n            || \n            sessionOn ? 'active':''            \n          } `) } >\n                <p> {timeArray[1]} </p>\n                <span>:</span>\n                <p>{timeArray[2]}</p>\n          </section>   \n                    \n         \n          <div className='break' style={{marginTop: '-1vh' }}> \n                <div> {                         \n                    Math.floor ((breakTime / 60).toFixed(0))\n                } </div>      \n\n                <button className='changeMinutes' onClick={minusBreakMinutes}> - </button>\n                    <div className={`break-sign-${breakIsOn && !sessionOn ? 'active':'inactive'}`}> break </div>\n                <button className='changeMinutes' onClick={plusBreakMinutes}> + </button>  \n          </div>       \n                  \n         \n          <div className='row'>\n                <button className={`button button-primary button-primary-${clockActive ? 'active' : 'inactive'}`} \n                    onClick={() => { \n                      toggleActiveInactive(); \n                      setSessionOrBreak();\n                  } }>\n\n                    {clockActive ? 'PAUSE' : 'START'}\n                 </button>\n\n                <button className='button-reset' onClick={resetTime} >\n                    RESET\n                </button>\n          </div>\n       </div>\n    </div>\n  );\n};\n\nexport default Timer;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}